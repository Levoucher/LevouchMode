-- Whitelisted keys
local whitelistedKeys = {
    "j5dV1nG2rK",
    "g2fN6cV7kD",
    "b8rH1mQ5xT",
    "S6vW3nJ7pD",
    "Y5tP9sZ7cK",
    "q2xR6vN3lW",
    "c7dH3bP6tG",
    "K8jT1kD5nC",
    "f6wZ2mL7hC",
    "E9vN1tK8cF",
    "z7fH5pL6wV",
    "V4dS7nG9kT",
    "Q8bF3sT7xL",
    "r5wJ4mK1sV",
    "u1fX7tM3qL",
    "x8nR5bG7kD",
    "B2wV6zJ9cN",
    "H9tN5cW8jP",
    "M7dP1nK5jW",
    "Z6xV7sT1fJ",
    "k8cQ2dN1jL",
    "e7tL5sG4jP",
    "A2kN1zR8jC",
    "y6dS3cT7wN",
    "W4tF2xG9vQ",
    "g1jT6mS3bL",
    "Q7nL5dK9xV",
    "f9zX3kH7pT",
    "S8bV1cN6wD",
    "j6mR1kF9sG",
    "Z2cW6dJ4vN",
    "H4wN1pS6zT",
    "T9hX7tD4sC",
    "b2vF5cL1nS",
    "e6dG7fS9xP",
    "U8qM3kT7nB",
    "P5hD2fZ6sT",
    "x9nC7sR8hW",
    "V1tL6mF2kD",
    "Q3dH7pZ9fC",
    "u5bN1vK7tM",
    "A7kC5rF2jN",
    "w9tL1zH5jK",
    "G2hR5xV3mK",
    "y7jZ1pX9qF",
    "c8dF6tN2xL",
    "j5rW2hQ7vP",
    "n1fD9cM4zV",
    "V6xN4bL1pS",
    "R8vP6cT9jN",
    "F3mS7dZ1nT",
    "K9qH2sJ4dR",
    "z7tG6kW8bV",
    "T1nD3wK6sM",
    "E8zR2sQ7mF",
    "b4vF7jL5xS",
    "X1kS6fZ8"
}

-- Create a function
-- Define the function that prompts the user to enter a key and checks if it is whitelisted
local function enterKey()
    local key = ""

    -- Create the enter key GUI
    local enterKeyGui = Instance.new("ScreenGui")
    enterKeyGui.Name = "EnterKeyGui"
    enterKeyGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Grey color
    mainFrame.Size = UDim2.new(0, 300, 0, 200) -- Size of the enter key GUI
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100) -- Centered on screen
    mainFrame.Parent = enterKeyGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Text = "ENTER KEY"
    titleLabel.Font = Enum.Font.GothamBlack
    titleLabel.TextSize = 24
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow color
    titleLabel.BackgroundTransparency = 1
    titleLabel.Size = UDim2.new(1, 0, 0, 50)
    titleLabel.Parent = mainFrame

    local searchPrompt = Instance.new("TextBox")
    searchPrompt.Name = "SearchPrompt"
    searchPrompt.PlaceholderText = "Paste here"
    searchPrompt.Font = Enum.Font.SourceSans
    searchPrompt.TextSize = 18
    searchPrompt.Size = UDim2.new(0.8, 0, 0, 50)
    searchPrompt.Position = UDim2.new(0.1, 0, 0.5, -25)
    searchPrompt.Parent = mainFrame

    local okButton = Instance.new("TextButton")
    okButton.Name = "OkButton"
    okButton.Text = "OK"
    okButton.Font = Enum.Font.GothamBlack
    okButton.TextSize = 14
    okButton.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow text
    okButton.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Purple background
    okButton.Size = UDim2.new(0.4, 0, 0, 50) -- Button size
    okButton.Position = UDim2.new(0.3, 0, 0.8, -25) -- Button position
    okButton.Parent = mainFrame
    okButton.MouseButton1Click:Connect(function()
        key = searchPrompt.Text
        enterKeyGui:Destroy()
    end)

    repeat
        wait()
    until key ~= "" or enterKeyGui == nil

    -- Check if the entered key is whitelisted
    for _, whitelistedKey in ipairs(whitelistedKeys) do
        if key == whitelistedKey then
            return true
        end
    end

    return false
end

-- Call the enterKey function to prompt the user for a key and check if it is whitelisted
if not enterKey() then
    return -- Stop execution if the key is not whitelisted
end



local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PhoneGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Grey color
mainFrame.Size = UDim2.new(0, 300, 0, 600) -- Phone size
mainFrame.Position = UDim2.new(0.5, -100, 0.5, -200) -- Centered on screen
mainFrame.Parent = screenGui
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "ScrollingFrame"
scrollingFrame.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Purple background
scrollingFrame.Size = UDim2.new(1, 0, 1, -50) -- Fill the mainFrame, leaving space for the title
scrollingFrame.Position = UDim2.new(0, 0, 0, 50) -- Below the title
scrollingFrame.CanvasSize = UDim2.new(0, 0, 1, 100) -- This should be modified depending on the content size
scrollingFrame.ScrollBarThickness = 10 -- Scrollbar size
scrollingFrame.Parent = mainFrame
local titleLine = Instance.new("Frame")
titleLine.Name = "TitleLine"
titleLine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
titleLine.Size = UDim2.new(1, 0, 0, 2) -- A thin line
titleLine.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Text = "PREM"
titleLabel.Font = Enum.Font.GothamBlack
titleLabel.TextSize = 24
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow color
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.Parent = mainFrame
function createButton(name, yPos)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = name
    button.Font = Enum.Font.GothamBlack
    button.TextSize = 14
    button.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow text
    button.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Purple background
    button.Size = UDim2.new(1, -20, 0, 30) -- Button size
    button.Position = UDim2.new(0, 10, 0, yPos) -- Button position
    button.Parent = scrollingFrame
    return button
end
local buttonNames = {"Box-dot Lock", "Mouselock [q]", "Streamable Silent #1", "Anti-Lock", "Walkable-Desync", "MORE COMING SOON!"}
local yPos = 10
for _, name in ipairs(buttonNames) do
    createButton(name, yPos)
    yPos = yPos + 40 -- Increment the yPos for the next button
end
mainFrame.Active = true
mainFrame.Draggable = true

local UserInputService = game:GetService("UserInputService")

local function onInputBegan(inputObject, gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.V and not gameProcessedEvent then
        screenGui.Enabled = not screenGui.Enabled
    end
end

UserInputService.InputBegan:Connect(onInputBegan)

local function handleButtonClick(buttonName)
    print(buttonName .. " clicked!")
    -- Add your custom script for the clicked button here

    if buttonName == "Box-dot Lock" then
        -- Add the script for the Box-dot Lock button here
        local Settings = {
    rewrittenmain = {
        Enabled = true,
        Key = "q",
        DOT = true,
        AIRSHOT = true,
        NOTIF = true,
        AUTOPRED = false,
        FOV = math.huge,
        RESOVLER = false
    }
}

local SelectedPart = "Head"
local Prediction = true
local PredictionValue = 0.122


    local AnchorCount = 0
    local MaxAnchor = 50

    local CC = game:GetService"Workspace".CurrentCamera
    local Plr;
    local enabled = false
    local accomidationfactor = 0.121
    local mouse = game.Players.LocalPlayer:GetMouse()
    local placemarker = Instance.new("Part", game.Workspace)

    function makemarker(Parent, Adornee, Color, Size, Size2)
        local e = Instance.new("BillboardGui", Parent)
        e.Name = "PP"
        e.Adornee = Adornee
        e.Size = UDim2.new(Size, Size2, Size, Size2)
        e.AlwaysOnTop = Settings.rewrittenmain.DOT
        local a = Instance.new("Frame", e)
        if Settings.rewrittenmain.DOT == true then
        a.Size = UDim2.new(1, 0, 1, 0)
        else
        a.Size = UDim2.new(0, 0, 0, 0)
        end
        if Settings.rewrittenmain.DOT == true then
        a.Transparency = 0
        a.BackgroundTransparency = 0
        else
        a.Transparency = 1
        a.BackgroundTransparency = 1
        end
        a.BackgroundColor3 = Color
        local g = Instance.new("UICorner", a)
        if Settings.rewrittenmain.DOT == false then
        g.CornerRadius = UDim.new(0, 0)
        else
        g.CornerRadius = UDim.new(1, 1) 
        end
        return(e)
    end

    
    local data = game.Players:GetPlayers()
    function noob(player)
        local character
        repeat wait() until player.Character
        local handler = makemarker(guimain, player.Character:WaitForChild(SelectedPart), Color3.fromRGB(107, 184, 255), 0.3, 3)
        handler.Name = player.Name
        player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild(SelectedPart) end)


        spawn(function()
            while wait() do
                if player.Character then
                end
            end
        end)
    end

    for i = 1, #data do
        if data[i] ~= game.Players.LocalPlayer then
            noob(data[i])
        end
    end

    game.Players.PlayerAdded:connect(function(Player)
        noob(Player)
    end)

    spawn(function()
        placemarker.Anchored = true
        placemarker.CanCollide = false
        if Settings.rewrittenmain.DOT == true then
        placemarker.Size = Vector3.new(8, 8, 8)
        else
        placemarker.Size = Vector3.new(0, 0, 0)
        end
        placemarker.Transparency = 0.75
        if Settings.rewrittenmain.DOT then
        makemarker(placemarker, placemarker, Color3.fromRGB(232, 186, 200), 0.40, 0)
        end
    end)

    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
        if k == Settings.rewrittenmain.Key and Settings.rewrittenmain.Enabled then
            if enabled == true then
                enabled = false
                if Settings.rewrittenmain.NOTIF == true then
                    Plr = getClosestPlayerToCursor()
                game.StarterGui:SetCore("SendNotification", {
                    Title = "";
                    Text = "YOUDIDHIMBAD",
                    Duration = 5
                })
            end
            else
                Plr = getClosestPlayerToCursor()
                enabled = true
                if Settings.rewrittenmain.NOTIF == true then

                    game.StarterGui:SetCore("SendNotification", {
                        Title = "";
                        Text = "Target: "..tostring(Plr.Character.Humanoid.DisplayName),
                        Duration = 5
                    })

                end
            end
        end
    end)



    function getClosestPlayerToCursor()
        local closestPlayer
        local shortestDistance = Settings.rewrittenmain.FOV

        for i, v in pairs(game.Players:GetPlayers()) do
            if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
                local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
                local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
                if magnitude < shortestDistance then
                    closestPlayer = v
                    shortestDistance = magnitude
                end
            end
        end
        return closestPlayer
    end

    local pingvalue = nil;
    local split = nil;
    local ping = nil;

    game:GetService"RunService".Stepped:connect(function()
        if enabled and Plr.Character ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then
            placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor))
        else
            placemarker.CFrame = CFrame.new(0, 9999, 0)
        end
        if Settings.rewrittenmain.AUTOPRED == true then
             pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
             split = string.split(pingvalue,'(')
             ping = tonumber(split[1])
            if ping < 130 then
                PredictionValue = 0.151
            elseif ping < 125 then
                PredictionValue = 0.149
            elseif ping < 110 then
                PredictionValue = 0.146
            elseif ping < 105 then
                PredictionValue = 0.138
            elseif ping < 90 then
                PredictionValue = 0.136
            elseif ping < 80 then
                PredictionValue = 0.134
            elseif ping < 70 then
                PredictionValue = 0.131
            elseif ping < 60 then
                PredictionValue = 0.1229
            elseif ping < 50 then
                PredictionValue = 0.1225
            elseif ping < 40 then
                PredictionValue = 0.1256
            end
        end
    end)

    local mt = getrawmetatable(game)
    local old = mt.__namecall
    setreadonly(mt, false)
    mt.__namecall = newcclosure(function(...)
        local args = {...}
        if enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" and Settings.rewrittenmain.Enabled and Plr.Character ~= nil then

            -- args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor)
            --[[
            if Settings.rewrittenmain.AIRSHOT == true then
                if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall
                    
                    --// Airshot
                    args[3] = Plr.Character.LeftFoot.Position+(Plr.Character.LeftFoot.Velocity*PredictionValue)

                else
                    args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue)

                end
            else
                    args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue)
            end
            ]]
            if Prediction == true then
                
            args[3] = Plr.Character[SelectedPart].Position+(Plr.Character[SelectedPart].Velocity*PredictionValue)

            else

            args[3] = Plr.Character[SelectedPart].Position

            end

            return old(unpack(args))
        end
        return old(...)
    end)

    game:GetService("RunService").RenderStepped:Connect(function()
        if Settings.rewrittenmain.RESOVLER == true and Plr.Character ~= nil and enabled and Settings.rewrittenmain.Enabled then
        if Settings.rewrittenmain.AIRSHOT == true and enabled and Plr.Character ~= nil then
            
            if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall
                
                --// Airshot

                --// Anchor Check

                if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
                    AnchorCount = AnchorCount + 1
                    if AnchorCount >= MaxAnchor then
                        Prediction = false
                        wait(2)
                        AnchorCount = 0;
                    end
                else
                    Prediction = true
                    AnchorCount = 0;
                end

                SelectedPart = "LeftFoot"

            else
                --// Anchor Check

                if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
                    AnchorCount = AnchorCount + 1
                    if AnchorCount >= MaxAnchor then
                        Prediction = false
                        wait(2)
                        AnchorCount = 0;
                    end
                else
                    Prediction = true
                    AnchorCount = 0;
                end

                SelectedPart = "HumanoidRootPart"

            end
            else

                --// Anchor Check

                if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
                    AnchorCount = AnchorCount + 1
                    if AnchorCount >= MaxAnchor then
                        Prediction = false
                        wait(2)
                        AnchorCount = 0;
                    end
                else
                    Prediction = true
                    AnchorCount = 0;
                end

                SelectedPart = "HumanoidRootPart"
            end

        else
                SelectedPart = "HumanoidRootPart"
        end
    end)

    elseif buttonYOUDIDHIMBAD == "Mouselock [q]" then
        -- Add the script for the Streamable lock #1 button here
        local MouseLock = {
    Settings = {
        Enabled = false,
        Key = 'q',
        Prediction = 0.1211,
        AimPart = 'HumanoidRootPart'
    }
}

local CurrentCamera = game:GetService("Workspace").CurrentCamera
local RunService = game:GetService("RunService")
local Mouse = game.Players.LocalPlayer:GetMouse()
local Plr

function FindClosestPlayer()
    local closestPlayer
    local shortestDistance = math.huge

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and
            v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
            if magnitude < shortestDistance then
                closestPlayer = v
                shortestDistance = magnitude
            end
        end
    end
    return closestPlayer
end

Mouse.KeyDown:Connect(function(KeyPressed)
    if KeyPressed == (MouseLock.Settings.Key) then
        if MouseLock.Settings.Enabled == true then
            MouseLock.Settings.Enabled = false
            Plr = FindClosestPlayer()
        else
            Plr = FindClosestPlayer()
            MouseLock.Settings.Enabled = true

        end
    end
end)

RunService.Stepped:connect(function()
    if MouseLock.Settings.Enabled == true then
        local Vector = CurrentCamera:WorldToScreenPoint(Plr.Character[MouseLock.Settings.AimPart].Position +
                                                            (Plr.Character[MouseLock.Settings.AimPart].Velocity *
                                                                MouseLock.Settings.Prediction))
        mousemoverel(Vector.X - Mouse.X, Vector.Y - Mouse.Y)
    end

end) 
    elseif buttonName == "Streamable Silent #1" then
        -- Add the script for the Lock #3 button here
        local hotkey = "n" -- toggle key
local mouse = game.Players.LocalPlayer:GetMouse()



mouse.KeyDown:Connect(function(key)
if key == hotkey then
if getgenv().ValiantAimHacks.SilentAimEnabled == true then
 getgenv().ValiantAimHacks.SilentAimEnabled = false
else
getgenv().ValiantAimHacks.SilentAimEnabled = true
end
end
end)


-- // Services
local Players = game:GetService("Players")

-- // Vars
local LocalPlayer = Players.LocalPlayer
local accomidationfactor = 0.1

-- // Silent Aim Module
local SilentAim = loadstring(game:HttpGet("https://pastebin.com/raw/2f0mGbMP"))()
SilentAim.TeamCheck = false
-- // Metatable vars
local mt = getrawmetatable(game)
local backupindex = mt.__index
setreadonly(mt, false)

-- // Check if player is down
SilentAim.checkSilentAim = function()
    local checkA = (SilentAim.SilentAimEnabled == true and SilentAim.Selected ~= LocalPlayer)
    local playerCharacter = SilentAim.Selected.Character
    local daHood = (playerCharacter.BodyEffects["K.O"].Value == false or playerCharacter:FindFirstChild("GRABBING_CONSTRAINT") ~= nil)

    return (checkA and daHood)
end

-- // Hook
mt.__index = newcclosure(function(t, k)
    if (t:IsA("Mouse") and (k == "Hit")) then
        
        local CPlayer = SilentAim.Selected
        if (SilentAim.checkSilentAim()) then
            if (CPlayer.Character:FindFirstChild("HumanoidRootPart")) then
                return {p=(CPlayer.Character.HumanoidRootPart.CFrame.p+(CPlayer.Character.HumanoidRootPart.Velocity*accomidationfactor))}
            end
        end
    end
    return backupindex(t, k)
end)

-- // Revert
setreadonly(mt, true)
getgenv().ValiantAimHacks.FOV = 23.5

    elseif buttonName == "Anti-Lock" then
        -- Add the script for the Lock #4 button here
        local Toggled = false
local KeyCode = 'z'


function AA()
    local oldVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, -70, oldVelocity.Z)
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, oldVelocity.Y, oldVelocity.Z)
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, -70, oldVelocity.Z)
    game.Players.LocalPlayer.Character.Humanoid.HipHeight = 4.14
end

game:GetService('UserInputService').InputBegan:Connect(function(Key)
    if Key.KeyCode == Enum.KeyCode[KeyCode:upper()] and not game:GetService('UserInputService'):GetFocusedTextBox() then
        if Toggled then
            Toggled = false
            game.Players.LocalPlayer.Character.Humanoid.HipHeight = 1.85

        elseif not Toggled then
            Toggled = true

            while Toggled do
                AA()
                task.wait()
            end
        end
    end
end)
    elseif buttonName == "Walkable-Desync" then
        -- Add the script for the Lock #5 button here
        _G.Endo = true

game.RunService.Heartbeat:Connect(
    function()
        if _G.Endo then
            local CurrentVelocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0)

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0.1), 0)
            game.Players.LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity =
                Vector3.new(math.random(3000), math.random(3000), math.random(3000))
            game.RunService.RenderStepped:Wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = CurrentVelocity
        end
    end
)
            elseif buttonName == "MORE COMING SOON!" then
        -- Add the script for the Lock #5 button here
        
   
    end
end

local function setupButtonListeners()
    for _, buttonName in ipairs(buttonNames) do
        local button = scrollingFrame:FindFirstChild(buttonName)
        button.MouseButton1Click:Connect(function()
            handleButtonClick(buttonName)
        end)
    end
end

-- Call the setupButtonListeners function after creating the buttons:
setupButtonListeners()

