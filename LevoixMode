

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v31 = 0 - 0;
					local v32;
					local v33;
					local v34;
					local v35;
					local v36;
					local v37;
					local v38;
					local v39;
					while true do
						if (v31 == (822 - (576 + 245))) then
							v34 = nil;
							v35 = nil;
							v31 = 2;
						end
						if (v31 == (2 + 1)) then
							v38 = nil;
							v39 = nil;
							v31 = 4;
						end
						if (v31 == 0) then
							v32 = 0;
							v33 = nil;
							v31 = 1;
						end
						if (v31 ~= 4) then
						else
							while true do
								if (v32 == (3 + 0)) then
									v39 = nil;
									while true do
										local v104 = 0 - 0;
										while true do
											if (v104 == 0) then
												local v111 = 125 - (85 + 40);
												while true do
													if (v111 ~= (79 - (18 + 61))) then
													else
														if (v33 == (1 + 2)) then
															local v119 = 1248 - (1152 + 96);
															local v120;
															while true do
																if (v119 == 0) then
																	v120 = 0;
																	while true do
																		local v127 = 0 - 0;
																		while true do
																			if ((0 + 0) == v127) then
																				if (v120 == 1) then
																					return v37;
																				end
																				if (v120 == 0) then
																					for v273 = 1 - 0, v24() do
																						v35[v273 - (3 - 2)] = v29();
																					end
																					for v275 = 1710 - (1515 + 194), v24() do
																						v36[v275] = v24();
																					end
																					v120 = 1;
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														end
														if (v33 == (651 - (353 + 297))) then
															local v121 = 0 - 0;
															local v122;
															while true do
																if (v121 == 0) then
																	v122 = 0 - 0;
																	while true do
																		if (1 ~= v122) then
																		else
																			v39 = {};
																			v33 = 2;
																			break;
																		end
																		if (v122 == (1194 - (122 + 1072))) then
																			local v131 = 0;
																			while true do
																				if (v131 == (2 - 1)) then
																					v122 = 1;
																					break;
																				end
																				if (0 == v131) then
																					local v139 = 0 - 0;
																					while true do
																						if (v139 == (374 - (20 + 354))) then
																							v37 = {v34,v35,nil,v36};
																							v38 = v24();
																							v139 = 1;
																						end
																						if ((159 - (75 + 83)) == v139) then
																							v131 = 2 - 1;
																							break;
																						end
																					end
																				end
																			end
																		end
																	end
																	break;
																end
															end
														end
														v111 = 1 + 0;
													end
													if (v111 == (3 - 2)) then
														v104 = 4 - 3;
														break;
													end
												end
											end
											if (v104 == 1) then
												if (v33 == 0) then
													local v112 = 0 - 0;
													local v113;
													local v114;
													while true do
														if (v112 == 1) then
															while true do
																if (v113 ~= 0) then
																else
																	v114 = 0;
																	while true do
																		if (v114 == 0) then
																			local v132 = 1203 - (183 + 1020);
																			while true do
																				if (v132 ~= 1) then
																				else
																					v114 = 1 + 0;
																					break;
																				end
																				if ((0 - 0) == v132) then
																					v34 = {};
																					v35 = {};
																					v132 = 1;
																				end
																			end
																		end
																		if (1 ~= v114) then
																		else
																			v36 = {};
																			v33 = 1442 - (101 + 1340);
																			break;
																		end
																	end
																	break;
																end
															end
															break;
														end
														if (v112 == (0 + 0)) then
															v113 = 0 - 0;
															v114 = nil;
															v112 = 1 + 0;
														end
													end
												end
												if (v33 == (2 - 0)) then
													local v115 = 0;
													local v116;
													while true do
														if (v115 == 0) then
															v116 = 0 + 0;
															while true do
																if (v116 == 1) then
																	for v128 = 355 - (265 + 89), v24() do
																		local v129 = 0 - 0;
																		local v130;
																		while true do
																			if (v129 ~= (0 + 0)) then
																			else
																				v130 = v22();
																				if (v21(v130, 1 + 0, 1) ~= 0) then
																				else
																					local v140 = 0 + 0;
																					local v141;
																					local v142;
																					local v143;
																					local v144;
																					while true do
																						if (v140 == 0) then
																							local v299 = 1582 - (1357 + 225);
																							while true do
																								if (v299 ~= 1) then
																								else
																									v140 = 1;
																									break;
																								end
																								if (v299 == (0 - 0)) then
																									v141 = 1209 - (738 + 471);
																									v142 = nil;
																									v299 = 2 - 1;
																								end
																							end
																						end
																						if (v140 == 1) then
																							v143 = nil;
																							v144 = nil;
																							v140 = 2;
																						end
																						if (v140 ~= (5 - 3)) then
																						else
																							while true do
																								if (v141 == (0 - 0)) then
																									local v340 = 0 - 0;
																									while true do
																										if (v340 == (1 + 0)) then
																											v141 = 1;
																											break;
																										end
																										if (v340 == 0) then
																											v142 = v21(v130, 7 - 5, 3);
																											v143 = v21(v130, 9 - 5, 9 - 3);
																											v340 = 1503 - (30 + 1472);
																										end
																									end
																								end
																								if (v141 == (2 - 1)) then
																									local v341 = 0;
																									local v342;
																									while true do
																										if (v341 ~= 0) then
																										else
																											v342 = 0 + 0;
																											while true do
																												if (v342 ~= (518 - (430 + 88))) then
																												else
																													v144 = {v23(),v23(),nil,nil};
																													if (v142 == 0) then
																														local v453 = 1070 - (26 + 1044);
																														local v454;
																														while true do
																															if (v453 == 0) then
																																v454 = 0;
																																while true do
																																	if (v454 ~= (0 + 0)) then
																																	else
																																		v144[3] = v23();
																																		v144[4] = v23();
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													elseif (v142 == 1) then
																														v144[3] = v24();
																													elseif (v142 == (2 + 0)) then
																														v144[2 + 1] = v24() - (2 ^ 16);
																													elseif (v142 == (153 - (123 + 27))) then
																														local v492 = 0 + 0;
																														local v493;
																														while true do
																															if (v492 ~= 0) then
																															else
																																v493 = 0 + 0;
																																while true do
																																	if (v493 == (0 - 0)) then
																																		v144[9 - 6] = v24() - ((7 - 5) ^ 16);
																																		v144[536 - (500 + 32)] = v23();
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													v342 = 1;
																												end
																												if (v342 == 1) then
																													v141 = 2;
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								if (v141 ~= 2) then
																								else
																									local v343 = 0 + 0;
																									local v344;
																									while true do
																										if ((0 + 0) == v343) then
																											v344 = 0 - 0;
																											while true do
																												if (v344 == 1) then
																													v141 = 3;
																													break;
																												end
																												if (v344 == 0) then
																													local v430 = 453 - (348 + 105);
																													while true do
																														if (v430 ~= 0) then
																														else
																															if (v21(v143, 1, 1) == (1465 - (1259 + 205))) then
																																v144[2 - 0] = v39[v144[2]];
																															end
																															if (v21(v143, 2, 1 + 1) ~= (1 + 0)) then
																															else
																																v144[968 - (473 + 492)] = v39[v144[3]];
																															end
																															v430 = 1 - 0;
																														end
																														if (v430 ~= (1 - 0)) then
																														else
																															v344 = 1 - 0;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																								if (3 == v141) then
																									if (v21(v143, 1 + 2, 3) ~= (1 - 0)) then
																									else
																										v144[4] = v39[v144[4]];
																									end
																									v34[v128] = v144;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																		end
																	end
																	v33 = 742 - (622 + 117);
																	break;
																end
																if (v116 == (0 + 0)) then
																	local v125 = 0 + 0;
																	local v126;
																	while true do
																		if (v125 == 0) then
																			v126 = 0;
																			while true do
																				if (v126 == 1) then
																					v116 = 1;
																					break;
																				end
																				if (v126 == (0 - 0)) then
																					local v145 = 0 + 0;
																					while true do
																						if (v145 == (1 + 0)) then
																							v126 = 1 - 0;
																							break;
																						end
																						if (v145 == 0) then
																							for v322 = 280 - (90 + 189), v38 do
																								local v323 = 507 - (110 + 397);
																								local v324;
																								local v325;
																								local v326;
																								while true do
																									if (v323 ~= 0) then
																									else
																										v324 = 0;
																										v325 = nil;
																										v323 = 1;
																									end
																									if (1 == v323) then
																										v326 = nil;
																										while true do
																											if (v324 == 1) then
																												if (v325 == 1) then
																													v326 = v22() ~= 0;
																												elseif (v325 == (5 - 3)) then
																													v326 = v25();
																												elseif (v325 == (3 - 0)) then
																													v326 = v26();
																												end
																												v39[v322] = v326;
																												break;
																											end
																											if ((0 - 0) ~= v324) then
																											else
																												local v410 = 1193 - (733 + 460);
																												local v411;
																												while true do
																													if (v410 ~= (0 + 0)) then
																													else
																														v411 = 0 + 0;
																														while true do
																															if (v411 == (491 - (189 + 302))) then
																																local v466 = 0;
																																while true do
																																	if (v466 == (0 + 0)) then
																																		v325 = v22();
																																		v326 = nil;
																																		v466 = 1 + 0;
																																	end
																																	if (v466 == (2 - 1)) then
																																		v411 = 1;
																																		break;
																																	end
																																end
																															end
																															if (v411 == 1) then
																																v324 = 531 - (246 + 284);
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																							v37[8 - 5] = v22();
																							v145 = 1;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (v32 ~= 0) then
								else
									v33 = 1533 - (656 + 877);
									v34 = nil;
									v32 = 1358 - (120 + 1237);
								end
								if (v32 ~= 1) then
								else
									local v96 = 0;
									local v97;
									while true do
										if (0 ~= v96) then
										else
											v97 = 0 + 0;
											while true do
												if (0 == v97) then
													local v117 = 0;
													while true do
														if (v117 ~= 1) then
														else
															v97 = 1;
															break;
														end
														if ((1646 - (828 + 818)) == v117) then
															v35 = nil;
															v36 = nil;
															v117 = 1833 - (504 + 1328);
														end
													end
												end
												if (v97 ~= (1 + 0)) then
												else
													v32 = 5 - 3;
													break;
												end
											end
											break;
										end
									end
								end
								if (v32 == (3 - 1)) then
									local v98 = 903 - (432 + 471);
									while true do
										if (v98 == (1755 - (458 + 1297))) then
											v37 = nil;
											v38 = nil;
											v98 = 1351 - (1348 + 2);
										end
										if (v98 ~= 1) then
										else
											v32 = 3;
											break;
										end
									end
								end
							end
							break;
						end
						if (v31 == 2) then
							v36 = nil;
							v37 = nil;
							v31 = 3;
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v40)
					if (v1(v40, 2) == 79) then
						local v71 = 0;
						while true do
							if (v71 == 0) then
								v20 = v0(v3(v40, 1, 1));
								return "";
							end
						end
					else
						local v72 = 0;
						local v73;
						while true do
							if (0 == v72) then
								v73 = v2(v0(v40, 16));
								if v20 then
									local v105 = 0;
									local v106;
									while true do
										if (v105 == 0) then
											v106 = v5(v73, v20);
											v20 = nil;
											v105 = 1;
										end
										if (v105 == 1) then
											return v106;
										end
									end
								else
									return v73;
								end
								break;
							end
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v41, v42, v43, v44 = v1(v16, v19, v19 + (3 - 0));
					v19 = v19 + 3 + 1;
					return (v44 * (7158226 + 9618990)) + (v43 * (169128 - 103592)) + (v42 * 256) + v41;
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 2) then
				function v22()
					local v45 = 0 + 0;
					local v46;
					while true do
						if (v45 == (0 - (0 + 0))) then
							v46 = v1(v16, v19, v19);
							v19 = v19 + 1;
							v45 = 901 - ((855 - (505 + 33)) + 583);
						end
						if (v45 == 1) then
							return v46;
						end
					end
				end
				v23 = nil;
				function v23()
					local v47 = 1819 - (323 + 1496);
					local v48;
					local v49;
					while true do
						if (v47 == (2 - 1)) then
							return (v49 * (707 - 451)) + v48;
						end
						if (v47 == (215 - ((376 - 172) + 11))) then
							v48, v49 = v1(v16, v19, v19 + (3 - 1));
							v19 = v19 + 1 + 1;
							v47 = 1;
						end
					end
				end
				v18 = 3;
			end
			if (v18 == 7) then
				function v30(v50, v51, v52)
					local v53 = 0;
					local v54;
					local v55;
					local v56;
					while true do
						if (v53 == 0) then
							v54 = v50[1];
							v55 = v50[2];
							v53 = 1;
						end
						if (v53 == 1) then
							v56 = v50[3];
							return function(...)
								local v80 = 1;
								local v81 = -1;
								local v82 = {...};
								local v83 = v12("#", ...) - 1;
								local function v84()
									local v86 = v54;
									local v87 = v55;
									local v88 = v56;
									local v89 = v28;
									local v90 = {};
									local v91 = {};
									local v92 = {};
									for v99 = 0, v83 do
										if ((v99 >= v88) or (1319 == ((4507 - (941 + 17)) - 2196))) then
											v90[v99 - v88] = v82[v99 + 1 + 0];
										else
											v92[v99] = v82[v99 + (3 - 2)];
										end
									end
									local v93 = (v83 - v88) + 1 + 0 + 0;
									local v94;
									local v95;
									while true do
										local v100 = 0 - 0;
										local v101;
										while true do
											if ((v100 == 0) or ((2674 + 622) <= (683 + 776))) then
												v101 = (1777 - (113 + 1664)) - 0;
												while true do
													if ((1065 < (4113 - 2834)) and (v101 == 0)) then
														local v118 = (2101 - (145 + 7)) - (1157 + 792);
														while true do
															if ((v118 == 1) or ((2425 - (991 + 500)) < 3)) then
																v101 = 1340 - (607 + 732);
																break;
															end
															if (((2407 + 1047) >= (2488 - (251 + 547))) and (v118 == (0 - 0))) then
																v94 = v86[v80];
																v95 = v94[1];
																v118 = 1464 - (627 + 836);
															end
														end
													end
													if ((3912 == 3912) and (v101 == 1)) then
														if ((1645 <= (20210 - 16154)) and (v95 <= (1553 - (128 + 1396)))) then
															if ((v95 <= (894 - (367 + 513))) or ((4206 - (8 + 172 + 556)) < (4153 - (506 + 1252)))) then
																if ((v95 <= (18 - 12)) or (1233 < (1180 - ((557 - 399) + 97)))) then
																	if ((((2230 + 1602) - (859 + 162)) >= (3207 - ((962 - (123 + 228)) + 67))) and (v95 <= (1 + 1))) then
																		if ((v95 <= 0) or ((151 + 2330) <= (659 + 394))) then
																			do
																				return v92[v94[2 + (0 - 0)]];
																			end
																		elseif ((v95 > (1 + 0)) or ((5886 - 3350) <= (64 + 17))) then
																			local v146 = 0 - 0;
																			local v147;
																			local v148;
																			local v149;
																			while true do
																				if ((3718 >= (5167 - (1598 + 88))) and (v146 == (0 + 0))) then
																					local v301 = 237 - (219 + 18);
																					while true do
																						if (((1557 - 459) < (10746 - 6989)) and (v301 == (0 - 0))) then
																							v147 = v94[2];
																							v148 = v92[v147];
																							v301 = 2 - (1286 - (776 + 509));
																						end
																						if ((2841 < (6788 - (346 + 1475))) and (v301 == (1 - 0))) then
																							v146 = 1 + 0;
																							break;
																						end
																					end
																				end
																				if (((2261 - (1680 + (1516 - (434 + 1054)))) <= (877 + 832)) and (v146 == (1609 - (566 + 1042)))) then
																					v149 = v94[1 + 2];
																					for v327 = 1 + 0, v149 do
																						v148[v327] = v92[v147 + v327];
																					end
																					break;
																				end
																			end
																		else
																			v92[v94[1322 - (714 + 606)]] = v92[v94[6 - 3]] * v92[v94[3 + (1 - 0)]];
																		end
																	elseif (((3476 - (226 + 1007)) > (2582 - (443 + 96 + 209))) and (v95 <= (6 - 2))) then
																		if (((711 - (194 + 155 + 153)) < ((19480 - 11596) - 2885)) and (v95 > (8 - 5))) then
																			local v151 = 251 - (171 + 80);
																			local v152;
																			local v153;
																			local v154;
																			while true do
																				if ((1 == v151) or (886 > ((9339 - (50 + 149)) - (3366 + 1174)))) then
																					v154 = nil;
																					while true do
																						if ((v152 == 0) or (2961 < (5015 - 3747))) then
																							local v348 = 0 + 0;
																							while true do
																								if ((v348 == (1 + 0)) or ((1094 + 1563) >= (10337 - 5875))) then
																									v152 = 3 - 2;
																									break;
																								end
																								if (((12939 - 8807) >= 1825) and (v348 == (1880 - (434 + 1446)))) then
																									v153 = 0 - 0;
																									v154 = nil;
																									v348 = 1912 - (469 + 1442);
																								end
																							end
																						end
																						if ((v152 == (1215 - (815 + 399))) or (291 > (1112 + 2618))) then
																							while true do
																								if (((2256 - 1517) < ((2493 - (314 + 309)) + (2946 - (908 + 322)))) and (v153 == ((1039 + 424) - (756 + 707)))) then
																									v154 = v94[(2 - 0) + 0];
																									v92[v154](v13(v92, v154 + (1 - 0), v94[3 - (0 + 0)]));
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if ((v151 == 0) or ((4862 - ((424 - (57 + 197)) + 47)) < (3034 - (248 + 1565)))) then
																					v152 = 0 + 0;
																					v153 = nil;
																					v151 = 1 + 0;
																				end
																			end
																		elseif (((963 + 2167) >= (11026 - 8146)) and not v92[v94[(367 + 42) - ((2044 - (259 + 1400)) + 22)]]) then
																			v80 = v80 + (2 - 1);
																		else
																			v80 = v94[1484 - (887 + 594)];
																		end
																	elseif ((v95 == (6 - (1 + 0))) or ((2121 + 721) > 2935)) then
																		if (v92[v94[2 + 0]] or (1140 < 559)) then
																			v80 = v80 + 1 + 0;
																		else
																			v80 = v94[4 - 1];
																		end
																	else
																		local v155 = 0;
																		local v156;
																		local v157;
																		while true do
																			if ((50 <= (447 + 1358)) and (v155 == 1)) then
																				while true do
																					if (((1734 + 542) >= (882 - (34 + 12))) and (v156 == (0 - 0))) then
																						v157 = v94[(8 - 3) - 3];
																						do
																							return v92[v157](v13(v92, v157 + (2 - 1), v94[7 - 4]));
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((15850 - 11746) < (4215 - (40 + 30))) and (v155 == (0 - 0))) then
																				v156 = 0;
																				v157 = nil;
																				v155 = 1294 - (1277 + 16);
																			end
																		end
																	end
																elseif (((3851 - ((863 - (347 + 300)) + 23)) == 3612) and (v95 <= (26 - (199 - (10 + 173))))) then
																	if ((v95 <= ((1798 - 875) - (465 + 450))) or ((1185 + 541) <= 1104)) then
																		if ((v95 == (637 - (458 + 172))) or (((4360 - (557 + 1092)) + 732) < (7531 - 5017))) then
																			v92[v94[6 - 4]] = v94[13 - 10] ~= (562 - (333 + 229));
																		else
																			v92[v94[2]] = v52[v94[(3 - 2) + 2]];
																		end
																	elseif ((v95 == (6 + 3)) or ((4052 - (629 + 407)) <= (1955 - 401))) then
																		v92[v94[3 - 1]]();
																	else
																		v92[v94[9 - 7]] = v92[v94[1 + 1 + 1 + 0]] - v92[v94[333 - (266 + 63)]];
																	end
																elseif (((1919 - (150 + 1100)) <= (4686 - (6 + 5 + 103))) and (v95 <= (24 - 12))) then
																	if ((3 == (1 + 2)) and (v95 > 11)) then
																		local v162 = 277 - (84 + 55 + 138);
																		local v163;
																		while true do
																			if ((3277 == (4562 - (286 + 999))) and (v162 == (0 - (0 + 0)))) then
																				v163 = v94[2];
																				do
																					return v13(v92, v163, v81);
																				end
																				break;
																			end
																		end
																	else
																		local v164 = 386 - (199 + 187);
																		local v165;
																		while true do
																			if ((((38236 - 28094) - 5464) > (150 + 1110)) and (v164 == (0 - 0))) then
																				v165 = v94[1418 - ((1007 - (175 + 417)) + (1177 - (62 + 114)))];
																				v92[v165] = v92[v165](v92[v165 + 1 + 0]);
																				break;
																			end
																		end
																	end
																elseif ((v95 > (921 - (802 + 106))) or ((5777 - 4137) >= (4500 + 120))) then
																	local v166 = 0 + 0;
																	local v167;
																	while true do
																		if ((v166 == (0 + 0)) or (1597 == (1960 - (88 + (1391 - (642 + 170)))))) then
																			v167 = v94[716 - (228 + 486)];
																			v92[v167] = v92[v167]();
																			break;
																		end
																	end
																else
																	local v168 = (0 - 0) - 0;
																	local v169;
																	local v170;
																	local v171;
																	while true do
																		if ((v168 == 0) or (365 >= (1953 + 486))) then
																			v169 = v87[v94[1978 - (1219 + 756)]];
																			v170 = nil;
																			v168 = 247 - (173 + 73);
																		end
																		if ((v168 == (1 + 0)) or ((5508 - 2043) < (681 + 621 + 1208))) then
																			local v309 = 0;
																			while true do
																				if (((3643 - 1030) <= 4109) and ((1 + 0) == v309)) then
																					v168 = 2;
																					break;
																				end
																				if ((((2953 - 991) - 1240) == (192 + (1264 - 734))) and (((0 - 0) + 0) == v309)) then
																					v171 = {};
																					v170 = v10({}, {__index=function(v367, v368)
																						local v369 = 0 + (1137 - (901 + 236));
																						local v370;
																						local v371;
																						local v372;
																						while true do
																							if ((v369 == (0 - (0 + 0))) or (2067 <= (620 - 369))) then
																								v370 = 1423 - (740 + 683);
																								v371 = nil;
																								v369 = 54 - (28 + 25);
																							end
																							if (((992 - (18 + (523 - 116))) == (2572 - 2005)) and (v369 == (3 - 2))) then
																								v372 = nil;
																								while true do
																									if (((1 - 0) == v370) or ((7545 - 2973) < (6417 - 3155))) then
																										while true do
																											if (((404 + 1195) <= 4729) and (v371 == (0 - 0))) then
																												local v467 = 0;
																												while true do
																													if (((2402 - 1336) == (477 + 589)) and (v467 == (0 - 0))) then
																														local v486 = 1655 - (609 + 1046);
																														while true do
																															if ((2810 >= (1713 - (632 + 37))) and (v486 == 0)) then
																																v372 = v171[v368];
																																return v372[1 + 0][v372[1992 - (185 + 1805)]];
																															end
																														end
																													end
																												end
																											end
																										end
																										break;
																									end
																									if ((2359 == (3045 - (239 + 447))) and (v370 == 0)) then
																										local v437 = 0 + 0;
																										while true do
																											if ((v437 == (59 - (40 + 19))) or ((9540 - 4594) == 3901)) then
																												v371 = 0 + 0;
																												v372 = nil;
																												v437 = 1;
																											end
																											if (((5085 - 2100) >= (3439 - (1388 + 576))) and (v437 == (971 - (157 + (1596 - 783))))) then
																												v370 = 1 - 0;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end,__newindex=function(v373, v374, v375)
																						local v376 = 0 + 0;
																						local v377;
																						local v378;
																						local v379;
																						while true do
																							if ((2819 == 2819) and (v376 == ((313 - (299 + 13)) + 0))) then
																								v379 = nil;
																								while true do
																									if ((v377 == (0 - (0 - 0))) or (3199 >= (2802 + 1208 + 830))) then
																										v378 = 0 + 0;
																										v379 = nil;
																										v377 = 1 + 0;
																									end
																									if ((v377 == 1) or ((949 + 535) >= 2823)) then
																										while true do
																											if ((v378 == ((2126 - 1172) - (818 + 136))) or ((6140 - (1059 + 42 + 113)) == (2764 - (1073 + (524 - (316 + 115)))))) then
																												v379 = v171[v374];
																												v379[2 - 1][v379[1186 - (1047 + 137)]] = v375;
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (((6307 - (958 + 600)) > (3592 - (52 + 1))) and (v376 == (1624 - (265 + 1359)))) then
																								v377 = 1732 - (50 + 1682);
																								v378 = nil;
																								v376 = 1757 - ((867 - 570) + 1459);
																							end
																						end
																					end});
																					v309 = 1 + 0;
																				end
																			end
																		end
																		if ((2384 >= (3465 - (872 + 978))) and (v168 == 2)) then
																			for v330 = 1 - 0, v94[(188 + 968) - (925 + 227)] do
																				local v331 = 0;
																				local v332;
																				local v333;
																				local v334;
																				while true do
																					if ((3825 >= (7262 - 4881)) and (v331 == (1 + 0))) then
																						v334 = nil;
																						while true do
																							if (((540 + 2297) == (11206 - 8369)) and (v332 == (1 + (0 - 0)))) then
																								while true do
																									if ((v333 == (1759 - (1021 + 737))) or (500 == (2828 - (1185 + 724)))) then
																										if (((10262 - 7672) > (1294 + 590)) and (v334[3 - 2] == (163 - 119))) then
																											v171[v330 - ((24 - (15 + 8)) - 0)] = {v92,v334[14 - 11]};
																										else
																											v171[v330 - (1297 - (1265 + 31))] = {v51,v334[(4 + 1601) - ((2235 - 1329) + 696)]};
																										end
																										v91[#v91 + 1 + 0] = v171;
																										break;
																									end
																									if ((1249 > (102 + 126 + 472)) and (v333 == (0 + 0))) then
																										local v439 = 0 + 0;
																										while true do
																											if ((v439 == (1 + 0 + 0)) or ((14947 - 11171) <= (2675 - (1451 + 415)))) then
																												v333 = 3 - 2;
																												break;
																											end
																											if (((5750 - (535 + 433)) >= (11379 - 8663)) and ((0 + 0) == v439)) then
																												local v470 = 0 + 0;
																												while true do
																													if (((257 - (97 + 160)) == v470) or ((4052 + 774) == ((2521 - 1679) - 557))) then
																														v80 = v80 + (3 - 2);
																														v334 = v86[v80];
																														v470 = 1 + 0;
																													end
																													if ((v470 == (1 + (0 - 0))) or (2516 < (3957 - 2606))) then
																														v439 = 858 - (263 + (1479 - (598 + 287)));
																														break;
																													end
																												end
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (((1600 - (1216 + 384)) == v332) or ((8041 - 3759) == ((5335 - (1555 + 67)) + (2760 - 1747)))) then
																								v333 = 0;
																								v334 = nil;
																								v332 = 446 - (290 + 155);
																							end
																						end
																						break;
																					end
																					if (((1386 + 1063) < 4636) and (v331 == 0)) then
																						v332 = 0 + 0;
																						v333 = nil;
																						v331 = 3 - 2;
																					end
																				end
																			end
																			v92[v94[(2290 - (921 + 107)) - (1149 + (291 - 180))]] = v30(v169, v170, v52);
																			break;
																		end
																	end
																end
															elseif ((v95 <= 21) or ((1519 + 951) < ((4829 - 2925) - 460))) then
																if ((v95 <= (88 - (61 + 10))) or ((3515 - (447 + 111)) > (3612 - (15 + 19)))) then
																	if ((1228 <= (1123 + (3101 - 1881))) and (v95 <= (45 - 30))) then
																		v92[v94[1677 - (1204 + 471)]] = v30(v87[v94[3 - (0 + 0)]], nil, v52);
																	elseif ((v95 > (7 + 9)) or (6 > (3961 - (252 + 367)))) then
																		local v172 = 0;
																		local v173;
																		local v174;
																		local v175;
																		local v176;
																		while true do
																			if (((14103 - (10041 - (553 + 118))) > (3364 + 504)) and (v172 == 2)) then
																				while true do
																					if (((652 + 225) < 4581) and (v173 == ((2343 - (645 + 59)) - (950 + 688)))) then
																						v176 = nil;
																						while true do
																							if ((v174 == (4 - 3)) or ((13855 - 10139) <= (4379 - 1993))) then
																								for v412 = v175 + (121 - (84 + 36)), v81 do
																									v7(v176, v92[v412]);
																								end
																								break;
																							end
																							if (((184 + 390) < (473 + 4295)) and (((2323 - (448 + 539)) - (1120 + 216)) == v174)) then
																								local v393 = 0;
																								local v394;
																								while true do
																									if (((2472 + 972) == (3914 - (414 + 56))) and (v393 == 0)) then
																										v394 = 0 - 0;
																										while true do
																											if (((1591 + 779) == 2370) and (v394 == 1)) then
																												v174 = 2 - 1;
																												break;
																											end
																											if ((4613 >= 390) and (v394 == 0)) then
																												local v459 = 1881 - (1853 + 28);
																												while true do
																													if (((11594 - 7132) > (7616 - 5299)) and (v459 == (1 + 0))) then
																														v394 = 1010 - (117 + 892);
																														break;
																													end
																													if ((v459 == (0 - 0)) or ((988 - (356 + 260)) >= (934 + 2349))) then
																														v175 = v94[1 + 1];
																														v176 = v92[v175];
																														v459 = 1 - 0;
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																					if ((v173 == (757 - (639 + (1073 - (732 + 223))))) or ((5081 - 2693) < (1372 - (602 + 112 + 24)))) then
																						local v350 = 0 - 0;
																						while true do
																							if ((v350 == (1650 - (1171 + 478))) or ((1606 - (1052 + 178)) > (2629 - (47 + (1761 - (73 + 1651)))))) then
																								v173 = 2 - 1;
																								break;
																							end
																							if ((v350 == (1682 - (276 + (2429 - (656 + 367))))) or (3251 < ((2225 + 1543) - (227 + 75 + 1683)))) then
																								v174 = 1084 - (605 + 479);
																								v175 = nil;
																								v350 = 1 - 0;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if (((503 - (496 + (7 - 1))) == v172) or (3046 < 1890)) then
																				v175 = nil;
																				v176 = nil;
																				v172 = 1 + (1 - 0);
																			end
																			if ((675 < (1007 + (4342 - (887 + 706)))) and (v172 == (0 + 0))) then
																				v173 = 0 - 0;
																				v174 = nil;
																				v172 = 1 + 0;
																			end
																		end
																	else
																		v92[v94[(5 - 3) - 0]][v94[1783 - (1593 + 187)]] = v92[v94[4]];
																	end
																elseif ((v95 <= (38 - 19)) or ((5375 - 2346) <= (8182 - (5066 + 428)))) then
																	if ((v95 > 18) or ((2605 - (1033 + 242)) == (5328 - ((2561 - (512 + 1372)) + (1732 - (675 + 787)))))) then
																		local v179 = 0 + 0;
																		local v180;
																		local v181;
																		local v182;
																		while true do
																			if (((3063 - (956 + 225)) <= 3905) and (v179 == (0 + 0))) then
																				v180 = 0 - 0;
																				v181 = nil;
																				v179 = 1;
																			end
																			if ((v179 == (1517 - (1236 + 280))) or ((43 + 4142) <= (294 + 336))) then
																				v182 = nil;
																				while true do
																					if ((v180 == (1 - (1698 - (532 + 1166)))) or ((7668 - 3190) == (16075 - 11292))) then
																						while true do
																							if ((3429 == (733 + 2696)) and (v181 == (0 - (0 - 0)))) then
																								v182 = v94[(18 - 13) - (1 + 2)];
																								do
																									return v92[v182](v13(v92, v182 + 1 + 0, v81));
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (((395 + 546) > 449) and (((1540 - (362 + 851)) - (75 + 252)) == v180)) then
																						local v351 = 0 - 0;
																						while true do
																							if ((v351 == (0 - (1967 - (971 + 996)))) or (((59 - 46) + 1313) <= (500 - (2073 - (1026 + 849))))) then
																								v181 = 0 + 0;
																								v182 = nil;
																								v351 = 229 - (87 + 141);
																							end
																							if (((306 + (2229 - 1403)) == (2018 - 886)) and (v351 == 1)) then
																								v180 = 2 - (4 - 3);
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	else
																		v92[v94[2]] = v94[6 - 3];
																	end
																elseif ((812 > (9 + 40 + 6)) and (v95 == (40 - 20))) then
																	v92[v94[(4 - 2) + 0]] = v92[v94[3]] + v92[v94[10 - 6]];
																elseif ((v94[277 - (209 + 66)] == v92[v94[(2 + 13) - 11]]) or ((2840 - (213 + 747)) <= (533 + 500))) then
																	v80 = v80 + 1 + (1482 - (1473 + 9));
																else
																	v80 = v94[6 - 3];
																end
															elseif ((((21371 - 16396) - (344 + 1539)) > 2078) and (v95 <= 25)) then
																if ((v95 <= (1206 - (95 + 1088))) or ((509 + 2652) < (127 - 66))) then
																	if ((v95 == ((908 + 356) - (194 + 661 + 387))) or (2573 > (16917 - 12586))) then
																		local v186 = 0 - (0 + 0);
																		local v187;
																		local v188;
																		local v189;
																		while true do
																			if ((v186 == (0 + 0)) or ((2707 + 678) <= (30 + 2676))) then
																				v187 = 0;
																				v188 = nil;
																				v186 = 1 + 0;
																			end
																			if ((((4332 - 3360) + 2927) > (4716 - (6368 - 4339))) and (v186 == 1)) then
																				v189 = nil;
																				while true do
																					if (((4103 + 590) == (2791 + 1902)) and ((1953 - (1610 + 342)) == v187)) then
																						while true do
																							if (((4289 - (451 + 985)) >= (186 + 62)) and (0 == v188)) then
																								v189 = v92[v94[9 - 5]];
																								if (((12094 - 8884) >= 2855) and v189) then
																									v80 = v80 + (3 - 2);
																								else
																									local v421 = 0 - (0 - 0);
																									local v422;
																									while true do
																										if (((5815 - 4348) <= (4995 - (930 + 797))) and (v421 == 0)) then
																											v422 = 0 + 0;
																											while true do
																												if ((2024 <= (3882 - 1113)) and (v422 == (203 - (13 + 190)))) then
																													v92[v94[1978 - (1814 + 162)]] = v189;
																													v80 = v94[3 - 0];
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if ((v187 == (0 - 0)) or (2841 < (657 + 1247))) then
																						v188 = 1587 - (707 + 880);
																						v189 = nil;
																						v187 = 1430 - (783 + 646);
																					end
																				end
																				break;
																			end
																		end
																	else
																		local v190 = 0;
																		while true do
																			if ((v190 == (0 + 0)) or ((9718 - 6281) == (2513 - (635 + 443)))) then
																				v92[v94[1966 - (1460 + 504)]] = v94[1805 - (749 + 1053)] ~= (0 + (0 - 0));
																				v80 = v80 + (553 - (274 + (761 - 483)));
																				break;
																			end
																		end
																	end
																elseif ((v95 > (20 + 4)) or (733 > (816 + 1491))) then
																	v92[v94[3 - 1]] = v92[v94[1650 - ((5570 - 4135) + 212)]][v92[v94[4]]];
																else
																	do
																		return;
																	end
																end
															elseif (((569 - (86 + 24)) == (916 - 457)) and (v95 <= (637 - (348 + 262)))) then
																if ((1497 <= (16794 - 12122)) and (v95 == (120 - 94))) then
																	local v193 = 0;
																	local v194;
																	local v195;
																	while true do
																		if (((0 + 0) == v193) or ((4197 - (53 + 23)) <= (193 + 107))) then
																			v194 = v94[1 + 1];
																			v195 = v92[v94[77 - (10 + 64)]];
																			v193 = 2 - (1 + 0);
																		end
																		if (((793 + 22) < 1889) and (v193 == (1 + 0))) then
																			v92[v194 + 1] = v195;
																			v92[v194] = v195[v94[4 + (796 - (279 + 517))]];
																			break;
																		end
																	end
																else
																	local v196 = 0 - 0;
																	local v197;
																	local v198;
																	while true do
																		if (((1177 - (755 + 147)) < (3746 - (442 + 985))) and (v196 == (1 + 0))) then
																			while true do
																				if ((v197 == (1 + 0)) or ((308 - 143) >= (1525 + 2316))) then
																					for v380 = v198, v81 do
																						local v381 = (0 - 0) - 0;
																						local v382;
																						while true do
																							if ((v381 == 0) or ((3525 + 283) < (1918 - (667 + 137)))) then
																								v382 = v90[v380 - v198];
																								v92[v380] = v382;
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (((936 + 3965) > (6714 - 2191)) and (v197 == (1121 - (316 + 805)))) then
																					local v352 = 0 + 0;
																					while true do
																						if (((3063 - (614 + 418)) < (3886 + 599)) and (v352 == (0 + 0))) then
																							v198 = v94[8 - (9 - 3)];
																							v81 = (v198 + v93) - (1 + 0);
																							v352 = 1106 - ((771 - 312) + 646);
																						end
																						if (((2715 - (390 + 386)) < (4203 - (1513 + 232))) and (v352 == (1 + 0))) then
																							v197 = 1 + 0;
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if ((v196 == (1044 - (210 + 834))) or (3539 == (1590 + 2965))) then
																			v197 = (1780 - (1219 + 323)) - (9 + 229);
																			v198 = nil;
																			v196 = 1;
																		end
																	end
																end
															elseif (((1461 + 375 + 1723) == (4122 - (257 + 306))) and (v95 > (65 - 37))) then
																for v277 = v94[1 + 1], v94[1737 - (610 + (1554 - (11 + 419)))] do
																	v92[v277] = nil;
																end
															else
																local v199 = 0 - (1392 - (1321 + 71));
																local v200;
																local v201;
																while true do
																	if (((2024 + 124) == (7679 - 5531)) and (v199 == 0)) then
																		v200 = 1152 - (822 + 330);
																		v201 = nil;
																		v199 = 1630 - (982 + 647);
																	end
																	if ((2791 >= 761) and ((611 - (240 + 370)) == v199)) then
																		while true do
																			if (((1831 - (585 + 489)) < (12556 - 9551)) and (v200 == ((0 - 0) - 0))) then
																				v201 = v94[2];
																				v92[v201] = v92[v201](v13(v92, v201 + (92 - (69 + 22)), v94[3]));
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif (((4654 - 1292) < (4673 - (712 + 113))) and (v95 <= (135 - 91))) then
															if (((90 + 62) < (6580 - 3937)) and (v95 <= (69 - 33))) then
																if (((4520 - (482 + 486)) > (3506 - (122 + 2156))) and (v95 <= (78 - 46))) then
																	if ((4006 <= 4318) and (v95 <= (138 - 108))) then
																		local v134 = 1936 - (693 + 1243);
																		local v135;
																		local v136;
																		local v137;
																		local v138;
																		while true do
																			if ((((1617 + 4037) - (1053 + 27)) >= (5618 - (479 + 845))) and (v134 == (1 + 1))) then
																				for v287 = v135, v81 do
																					local v288 = 0;
																					local v289;
																					local v290;
																					while true do
																						if ((v288 == ((405 - (334 + 70)) - 0)) or (4336 <= (16672 - 13027))) then
																							while true do
																								if ((v289 == (0 - 0)) or ((2949 - 1723) < (1617 - 529))) then
																									v290 = 0 + (0 - 0);
																									while true do
																										if (((7006 - 3779) < (5613 - (148 + 1099))) and (v290 == 0)) then
																											v138 = v138 + (4 - 3) + 0;
																											v92[v287] = v136[v138];
																											break;
																										end
																									end
																									break;
																								end
																							end
																							break;
																						end
																						if (((383 + 129) < 747) and (v288 == ((304 - (243 + 61)) - 0))) then
																							v289 = 0 + 0;
																							v290 = nil;
																							v288 = 106 - (77 + 28);
																						end
																					end
																				end
																				break;
																			end
																			if ((v134 == (1020 - (785 + 234))) or ((877 + (1094 - 747)) <= (1569 - (23 + 504)))) then
																				local v279 = 544 - (204 + (938 - 598));
																				while true do
																					if (((735 + 3298) == (4592 - (297 + 262))) and (v279 == (1476 - (382 + 1094)))) then
																						v81 = (v137 + v135) - (1 - 0);
																						v138 = 0 - (0 + 0);
																						v279 = 1 + 0;
																					end
																					if ((v279 == (1 + 0)) or ((5272 - (97 + 669)) < 1599)) then
																						v134 = 1 + 1;
																						break;
																					end
																				end
																			end
																			if (((5994 - 2527) >= (92 + 3310)) and (v134 == 0)) then
																				v135 = v94[1479 - (690 + 787)];
																				v136, v137 = v89(v92[v135](v92[v135 + (682 - (326 + (2049 - (1585 + 109))))]));
																				v134 = 1 + 0;
																			end
																		end
																	elseif ((v95 > 31) or ((3991 + 859) < (611 - 373))) then
																		v92[v94[2]] = v92[v94[3]] + v94[4];
																	else
																		local v203 = (2017 - 1179) - (380 + 458);
																		local v204;
																		local v205;
																		local v206;
																		local v207;
																		while true do
																			if ((v203 == (2 + 0)) or (139 >= (51 + 532))) then
																				while true do
																					if (((3181 + 1457) > ((1657 + 1620) - (7 + 170))) and ((0 - 0) == v204)) then
																						local v355 = 0 - 0;
																						while true do
																							if (((615 + 151) <= (2964 + 1066)) and (v355 == 1)) then
																								v204 = 1 + 0;
																								break;
																							end
																							if (((389 + 2079) >= (408 - 261)) and (0 == v355)) then
																								v205 = v94[6 - 4];
																								v206 = {v92[v205](v13(v92, v205 + (1 - 0), v81))};
																								v355 = 832 - (408 + 423);
																							end
																						end
																					end
																					if ((283 <= (605 - 277)) and ((1 + 0) == v204)) then
																						v207 = 0 + 0;
																						for v383 = v205, v94[1682 - (385 + 1293)] do
																							local v384 = 0 + 0;
																							local v385;
																							while true do
																								if ((v384 == (367 - (15 + 352))) or (((3103 + 1249) - (465 + 34)) <= (2647 - (674 + 120 + 685)))) then
																									v385 = 0 - 0;
																									while true do
																										if (((1654 + (1422 - (153 + 927))) >= (1955 - (163 + 683))) and (v385 == (605 - (404 + 201)))) then
																											v207 = v207 + 1;
																											v92[v383] = v206[v207];
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((0 + 0) == v203) or (3632 == (420 + 4483))) then
																				local v317 = 1414 - (216 + 1198);
																				while true do
																					if (((23 + 490) <= (3876 - 2754)) and (v317 == (0 + 0))) then
																						v204 = 0 + 0;
																						v205 = nil;
																						v317 = 652 - (176 + 475);
																					end
																					if (((1477 + 341) <= (5781 - 3495)) and (v317 == 1)) then
																						v203 = 1198 - (1052 + 145);
																						break;
																					end
																				end
																			end
																			if (((4179 - 1811) > (3055 - (1216 + 656))) and (v203 == (2 - 1))) then
																				v206 = nil;
																				v207 = nil;
																				v203 = 2;
																			end
																		end
																	end
																elseif ((v95 <= 34) or ((394 + 3988) < (1262 - 766))) then
																	if ((v95 > 33) or ((3949 - (75 + 1153)) > (4478 - (888 + (865 - (648 + 33)))))) then
																		v92[v94[2]] = {};
																	else
																		local v209 = 0 - 0;
																		local v210;
																		local v211;
																		local v212;
																		while true do
																			if (((884 + 694) >= (3246 - 2421)) and (v209 == (239 - (112 + 127)))) then
																				local v318 = 0 - 0;
																				while true do
																					if (((3442 + 82) <= (5438 - (310 + 525 + 242))) and (v318 == (0 - 0))) then
																						v210 = 0 - 0;
																						v211 = nil;
																						v318 = 1 + 0;
																					end
																					if ((((4377 - 2625) - (1650 + 101)) == v318) or (((1650 - 1047) + 391 + 663) > (4653 - (303 + 46 + (3075 - 1687))))) then
																						v209 = 1;
																						break;
																					end
																				end
																			end
																			if ((v209 == (1874 - (124 + 1749))) or ((2224 - ((1032 - (288 + 400)) + 795)) > 4546)) then
																				v212 = nil;
																				while true do
																					if (((16493 - 11940) <= (5251 - (55 + 614))) and (v210 == (1032 - (223 + 808)))) then
																						for v386 = 1 + 0, #v91 do
																							local v387 = (1618 - (77 + 51)) - (1102 + 388);
																							local v388;
																							while true do
																								if ((v387 == 0) or (4781 == 2487)) then
																									v388 = v91[v386];
																									for v425 = 0 + 0, #v388 do
																										local v426 = 0 + 0;
																										local v427;
																										local v428;
																										local v429;
																										while true do
																											if ((v426 == (1 + 0 + 0)) or ((6011 - 1755) <= ((1516 - (978 + 492)) + 402))) then
																												v429 = v427[4 - 2];
																												if (((v428 == v92) and (v429 >= v211)) or ((1711 + 2397) == (5075 - (267 + 219 + 648)))) then
																													local v471 = 0;
																													local v472;
																													while true do
																														if (((944 + 50 + 21) == (2063 - 1048)) and (v471 == (0 + 0))) then
																															v472 = 1200 - (320 + 880);
																															while true do
																																if (((733 + 1048) == (3579 - (98 + 1700))) and (v472 == (0 - 0))) then
																																	v212[v429] = v428[v429];
																																	v427[2 - (2 - 1)] = v212;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if ((v426 == 0) or ((1439 + 721) == (2629 + 64))) then
																												local v456 = 0 + 0;
																												while true do
																													if ((v456 == (1 + 0)) or ((1761 + 116) <= ((2284 - 1615) - 361))) then
																														v426 = 835 - (655 + 179);
																														break;
																													end
																													if (((7087 - (6879 - (1333 + 550))) > (3916 - (2656 - (206 + 133)))) and (v456 == (828 - (501 + 327)))) then
																														v427 = v388[v425];
																														v428 = v427[1 + 0];
																														v456 = 1 + 0;
																													end
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if ((((5284 - (193 + 741)) - (372 + 1277)) < 3601) and (v210 == (0 + 0))) then
																						local v356 = 1269 - (906 + 363);
																						while true do
																							if (((10987 - 6930) <= (312 + 4243)) and (v356 == (0 + 0))) then
																								v211 = v94[2 + 0];
																								v212 = {};
																								v356 = 545 - (240 + 59 + 245);
																							end
																							if (((1679 - (269 + 1409)) == v356) or ((5355 - 2383) <= 2849)) then
																								v210 = (2 - 1) + 0;
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	end
																elseif ((v95 > (18 + 17)) or ((4668 - (1761 + 100)) <= (3020 - (213 + 1158)))) then
																	v52[v94[5 - 2]] = v92[v94[2]];
																else
																	v51[v94[1599 - (159 + 1437)]] = v92[v94[1248 - (27 + 1219)]];
																end
															elseif (((4870 - (289 + 1104)) < 3755) and (v95 <= (5 + 35))) then
																if ((v95 <= (97 - 59)) or (1274 == 1807)) then
																	if (((2409 + 1808) >= (3767 - (251 + 443))) and (v95 > (59 - 22))) then
																		local v217 = (0 - 0) - 0;
																		local v218;
																		local v219;
																		local v220;
																		local v221;
																		while true do
																			if (((2265 - 775) >= (721 - (540 - (83 + 189)))) and (v217 == (0 + 0))) then
																				local v319 = 1442 - (377 + 344 + 721);
																				while true do
																					if ((v319 == (0 - 0)) or (942 < 544)) then
																						v218 = v94[5 - 3];
																						v219, v220 = v89(v92[v218](v13(v92, v218 + 1, v94[771 - (756 + 12)])));
																						v319 = 1964 - (818 + 1145);
																					end
																					if ((v319 == 1) or ((5360 - 3774) == 1334)) then
																						v217 = 504 - (379 + (286 - 162));
																						break;
																					end
																				end
																			end
																			if ((v217 == (1979 - ((5284 - 3400) + 94))) or (307 > (463 + 3900))) then
																				v81 = (v220 + v218) - (2 - 1);
																				v221 = 0 + (0 - 0);
																				v217 = 1881 - (1249 + 630);
																			end
																			if (((3224 + 43) > (4034 - (691 + 898))) and (v217 == (2 + 0))) then
																				for v335 = v218, v81 do
																					local v336 = 0 + 0;
																					local v337;
																					while true do
																						if ((v336 == (0 + 0)) or (((7327 - (26 + 1944)) - (324 + 256)) == (1876 - 1107))) then
																							v337 = 516 - (92 + 424);
																							while true do
																								if ((((1685 - 548) + 1139) >= (371 - ((454 - 340) + 253))) and (v337 == (0 + 0))) then
																									v221 = v221 + 1;
																									v92[v335] = v219[v221];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																		end
																	elseif (((11922 - 7797) >= 3410) and (v92[v94[25 - (18 + 5)]] ~= v94[284 - (160 + (731 - (222 + 389)))])) then
																		v80 = v80 + (2 - 1);
																	else
																		v80 = v94[3];
																	end
																elseif ((v95 > (9 + 30)) or (4441 <= ((99 + 3572) - (1027 + 864)))) then
																	local v222 = 0 + 0;
																	local v223;
																	local v224;
																	local v225;
																	local v226;
																	local v227;
																	while true do
																		if (((246 + 473) < (5384 - (2625 - (220 + 179)))) and (v222 == (2 + (0 - 0)))) then
																			v227 = nil;
																			while true do
																				if (((3844 - 1926) > ((597 + 2689) - (365 + 1013))) and (v223 == (1 + 0))) then
																					local v358 = 0 + 0 + 0;
																					while true do
																						if ((((6067 - (555 + 1443)) - (124 + 1790)) < (4188 - 1901)) and (v358 == 0)) then
																							v226 = nil;
																							v227 = nil;
																							v358 = 1 + 0;
																						end
																						if (((1010 + 850) >= (720 - (15 + 307))) and (v358 == 1)) then
																							v223 = 1899 - (1753 + 144);
																							break;
																						end
																					end
																				end
																				if ((v223 == (1788 - ((3646 - (1243 + 671)) + 56))) or (1181 > 4899)) then
																					v224 = 0 - 0;
																					v225 = nil;
																					v223 = 1 + 0;
																				end
																				if ((v223 == (1 + (1620 - (1140 + 479)))) or ((4971 - (1032 + 99)) <= (273 + 1153))) then
																					while true do
																						if ((v224 == (0 + 0)) or ((4208 - (490 + 885)) == (1585 + 149))) then
																							local v400 = 0 + 0;
																							while true do
																								if ((v400 == 1) or (4914 == 2211)) then
																									v224 = 1;
																									break;
																								end
																								if ((v400 == (0 - (0 - 0))) or ((1214 - (67 + 228 + 356)) > (6624 - 4566))) then
																									v225 = v94[2];
																									v226 = {v92[v225](v92[v225 + 1 + (1339 - (395 + 944))])};
																									v400 = (1365 + 176) - (668 + 872);
																								end
																							end
																						end
																						if ((v224 == (1 + 0)) or ((4527 - (74 + 1650)) == 3443)) then
																							v227 = 1736 - (763 + 973);
																							for v418 = v225, v94[4] do
																								local v419 = 1514 - (123 + 1391);
																								while true do
																									if (((2842 + 874) < (893 + 2003 + 328 + 1328)) and ((0 + 0) == v419)) then
																										v227 = v227 + (845 - (353 + 491));
																										v92[v418] = v226[v227];
																										break;
																									end
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if (((0 - 0) == v222) or (647 > 3856)) then
																			v223 = 0;
																			v224 = nil;
																			v222 = 4 - 3;
																		end
																		if (((2072 + 802 + 212) >= 521) and (v222 == (3 - 2))) then
																			v225 = nil;
																			v226 = nil;
																			v222 = (2 - 1) + 1;
																		end
																	end
																elseif ((v92[v94[2]] < v94[914 - (112 + (2000 - 1202))]) or ((822 + 1546) > (5399 - (482 + 581)))) then
																	v80 = v80 + (2 - (1 + 0));
																else
																	v80 = v94[582 - (78 + 501)];
																end
															elseif (((1652 - (846 + 577)) < 1365) and (v95 <= 42)) then
																if ((v95 > ((67 + 49) - 75)) or ((2838 + 490) < ((925 + 925) - (329 + 71)))) then
																	v92[v94[2]] = v51[v94[3]];
																else
																	v92[v94[(3919 - 2295) - (327 + 1295)]] = #v92[v94[13 - 10]];
																end
															elseif ((v95 == (626 - (149 + 434))) or ((8011 - 5706) >= (16324 - 12617))) then
																local v231 = 1706 - (1680 + 26);
																local v232;
																local v233;
																local v234;
																while true do
																	if (((5624 - (740 + 661)) > (1319 + 1989)) and (v231 == (1 + 0))) then
																		v234 = nil;
																		while true do
																			if ((v232 == (1 + 0)) or ((1968 - (52 + 500)) >= (5047 - (24 + 1163)))) then
																				for v389 = v233 + (1580 - (28 + 1551)), v94[3] do
																					v7(v234, v92[v389]);
																				end
																				break;
																			end
																			if ((v232 == (0 - 0)) or ((2073 - 575) <= (2108 - (433 + 1557)))) then
																				local v359 = 0 + 0;
																				while true do
																					if ((1 == v359) or (((2407 - 1889) + 788) > (1905 + 2013))) then
																						v232 = 1 - 0;
																						break;
																					end
																					if ((v359 == 0) or ((845 + 2638) < ((6980 - 4381) + 488))) then
																						local v401 = 58 - (51 + 7);
																						while true do
																							if ((v401 == (1 + (0 - 0))) or ((3896 - (665 + 48 + 63)) < 407)) then
																								v359 = 819 - (100 + 718);
																								break;
																							end
																							if ((v401 == (475 - (427 + 48))) or ((5922 - (778 + 433)) == 4573)) then
																								v233 = v94[2 + 0];
																								v234 = v92[v233];
																								v401 = 1;
																							end
																						end
																					end
																				end
																			end
																		end
																		break;
																	end
																	if (((2316 - (1854 + 135)) <= (1216 + 431)) and (v231 == (0 + 0))) then
																		local v320 = 0 - 0;
																		while true do
																			if ((v320 == 0) or ((2532 - (60 + 244)) == (2565 - (1081 + (208 - 108))))) then
																				v232 = (0 - 0) - 0;
																				v233 = nil;
																				v320 = 2 - (1 + 0);
																			end
																			if ((((1550 - (951 + 364)) + (6303 - 2069)) == 4469) and (v320 == (1 + 0))) then
																				v231 = 1;
																				break;
																			end
																		end
																	end
																end
															else
																v92[v94[5 - 3]] = v92[v94[1008 - (404 + 601)]];
															end
														elseif ((v95 <= (23 + 29)) or ((1013 + 3301) < (4 + 164))) then
															if ((v95 <= (45 + 3)) or ((180 + 405) >= (2566 - ((159 - 87) + 552)))) then
																if ((v95 <= (141 - 95)) or ((2109 - (131 + 425)) <= (1030 - (471 + 438)))) then
																	if (((2168 + (2085 - (520 + 824))) < (5330 - (426 + 343))) and (v95 == (40 + 5))) then
																		local v237 = 0 - 0;
																		local v238;
																		while true do
																			if ((v237 == (111 - (26 + 85))) or ((235 + 228) >= (7899 - 3175))) then
																				v238 = v94[537 - (472 + 63)];
																				v92[v238](v92[v238 + 1]);
																				break;
																			end
																		end
																	elseif ((v92[v94[2]] < v92[v94[1934 - (1548 + 382)]]) or (1173 > 2534)) then
																		v80 = v80 + (62 - (30 + 31));
																	else
																		v80 = v94[508 - (352 + 153)];
																	end
																elseif ((v95 == (270 - (200 + 23))) or ((2492 - 1734) >= (3344 - (671 + 32)))) then
																	if ((v92[v94[881 - (519 + 360)]] == v94[3 + 1]) or ((6299 - 4145) < (1209 - (270 + 16)))) then
																		v80 = v80 + 1;
																	else
																		v80 = v94[2 + 1];
																	end
																elseif (((5226 - 1786) == 3440) and (v92[v94[1233 - (1131 + 100)]] ~= v92[v94[2 + 2]])) then
																	v80 = v80 + (251 - (231 + 19));
																else
																	v80 = v94[3];
																end
															elseif (((1706 - (154 + 1295)) <= (3053 - (256 + 64))) and (v95 <= 50)) then
																if ((2738 > (2303 - (809 + 358))) and (v95 == (79 - 30))) then
																	v80 = v94[3];
																else
																	local v240 = v94[2];
																	local v241 = v94[4];
																	local v242 = v240 + 2 + 0;
																	local v243 = {v92[v240](v92[v240 + 1], v92[v242])};
																	for v281 = 1 + 0, v241 do
																		v92[v242 + v281] = v243[v281];
																	end
																	local v244 = v243[1 - 0];
																	if (v244 or (2002 >= 4728)) then
																		local v296 = 1934 - ((159 - 113) + 1888);
																		while true do
																			if (((1373 - (1112 + (529 - (380 + 39)))) <= (884 - (28 + 15 + 136))) and (v296 == (0 - 0))) then
																				v92[v242] = v244;
																				v80 = v94[798 - (178 + 617)];
																				break;
																			end
																		end
																	else
																		v80 = v80 + (4 - 3);
																	end
																end
															elseif ((v95 > ((27 - 18) + 42)) or ((301 + 238) > 1622)) then
																local v245 = 0 - 0;
																local v246;
																local v247;
																local v248;
																local v249;
																local v250;
																while true do
																	if ((v245 == ((1 - 0) + 0)) or (79 > 4560)) then
																		v248 = nil;
																		v249 = nil;
																		v245 = 2 - 0;
																	end
																	if (((5365 - (387 + (1692 - (662 + 985)))) >= (1567 - (252 + 484 + 302))) and (v245 == 2)) then
																		v250 = nil;
																		while true do
																			if ((v246 == (4 - 2)) or (((19669 - (199 + 677)) - 13860) <= (3332 - (1306 + 274)))) then
																				while true do
																					if ((v247 == ((1778 - (49 + 395)) - (1093 + 240))) or ((942 - (221 + 278 + 184)) >= 2552)) then
																						v250 = v92[v248 + 2 + 0];
																						if (((1037 - ((258 - 134) + 2)) <= 2861) and (v250 > 0)) then
																							if ((4536 > (64 + 14)) and (v249 > v92[v248 + (1225 - (1219 + 5))])) then
																								v80 = v94[1 + 2];
																							else
																								v92[v248 + (851 - (174 + 674))] = v249;
																							end
																						elseif ((v249 < v92[v248 + (2 - 1)]) or ((1496 + 278) < (872 - (565 + 213)))) then
																							v80 = v94[3];
																						else
																							v92[v248 + (10 - 7)] = v249;
																						end
																						break;
																					end
																					if (((403 + 1758) == (745 + (2259 - (156 + 687)))) and (v247 == (0 + 0))) then
																						local v403 = 0;
																						local v404;
																						while true do
																							if ((v403 == (155 - (55 + 100))) or ((1363 + 2862) == 4387)) then
																								v404 = 0 + 0;
																								while true do
																									if ((0 == v404) or ((2135 - ((1789 - (278 + 1135)) + 837)) > (1558 + 3002))) then
																										local v460 = 0 - 0;
																										while true do
																											if ((v460 == (0 - (1285 - (585 + 700)))) or ((1615 + 120) < (361 + 417))) then
																												v248 = v94[2];
																												v249 = v92[v248];
																												v460 = 1;
																											end
																											if (((2 - 1) == v460) or ((16290 - (6898 + 4801)) == 4302)) then
																												v404 = 1 + 0;
																												break;
																											end
																										end
																									end
																									if ((v404 == (2 - 1)) or (3119 < (2148 - (580 + 12)))) then
																										v247 = 1 + 0;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if (((3206 + 1279) > (1198 + 1636)) and (v246 == ((396 - (147 + 17)) - (103 + 128)))) then
																				v249 = nil;
																				v250 = nil;
																				v246 = 1 + 1;
																			end
																			if (((46 + 27 + 2053) == ((7625 - 3923) - (271 + 1305))) and (v246 == (0 - (1746 - (1506 + 240))))) then
																				local v360 = (0 - 0) - 0;
																				while true do
																					if ((v360 == (0 + 0)) or ((283 + 1711) > (3457 - ((1101 - (116 + 372)) + 153)))) then
																						v247 = 452 - (70 + (2148 - (509 + 1257)));
																						v248 = nil;
																						v360 = 1 + 0;
																					end
																					if (((670 - 222) < (104 + 2373)) and (v360 == 1)) then
																						v246 = (1850 - (1165 + 682)) - 2;
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((v245 == (0 + 0)) or ((6046 - 2898) > (5723 - 2312))) then
																		v246 = 0;
																		v247 = nil;
																		v245 = 1 + 0;
																	end
																end
															else
																local v251 = 0 - 0;
																local v252;
																local v253;
																while true do
																	if (((899 + 3959) >= (10496 - 7826)) and ((0 - 0) == v251)) then
																		v252 = 0 + 0;
																		v253 = nil;
																		v251 = 764 - (448 + 315);
																	end
																	if ((v251 == 1) or ((3526 - 1090) <= (3132 - (3553 - (1270 + 586))))) then
																		while true do
																			if ((v252 == (0 - 0)) or ((2306 - (117 + 875 + (1562 - (194 + 1308)))) < (1596 - (296 + 387)))) then
																				v253 = v94[2 + 0];
																				do
																					return v13(v92, v253, v253 + v94[6 - 3]);
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif (((9476 - 4507) > (3523 - (163 + 1283))) and (v95 <= ((280 - (249 + 22)) + 47))) then
															if ((v95 <= (42 + (34 - 22))) or ((3347 - ((1114 - 759) + 223)) < 1369)) then
																if ((v95 == (83 - 30)) or (776 == (2168 - (146 + 761 + 769)))) then
																	local v254 = 0;
																	local v255;
																	local v256;
																	while true do
																		if (((1496 + 3356) == 4852) and (v254 == (3 - 2))) then
																			while true do
																				if ((v255 == 0) or (2851 == (21755 - 17173))) then
																					v256 = v94[616 - (472 + (1169 - (317 + 710)))];
																					v92[v256] = v92[v256](v13(v92, v256 + 1, v81));
																					break;
																				end
																			end
																			break;
																		end
																		if ((768 <= (172 + 1389)) and (v254 == (467 - (145 + 322)))) then
																			v255 = 0;
																			v256 = nil;
																			v254 = 1;
																		end
																	end
																else
																	v92[v94[2]] = not v92[v94[1 + 2]];
																end
															elseif ((v95 == 55) or ((1738 - (2 + 195 + 102)) == (156 + (1381 - (584 + 233))))) then
																v92[v94[743 - (574 + 167)]] = v92[v94[72 - (48 + 21)]][v94[(1764 - (571 + 1081)) - (82 + (1758 - (1129 + 603)))]];
															else
																v92[v94[326 - (197 + 127)]][v94[290 - (92 + 195)]] = v94[11 - 7];
															end
														elseif ((v95 <= ((179 - (29 + 2)) - 90)) or (4251 < (1470 - (35 + 779)))) then
															if ((v95 > (173 - 116)) or ((13218 - 10555) <= (564 + 1806))) then
																local v262 = 0 + 0;
																local v263;
																local v264;
																local v265;
																local v266;
																while true do
																	if ((v262 == (0 - 0)) or ((907 + 1454) < ((1272 - (541 + 586)) + (95 - 75)))) then
																		v263 = 0;
																		v264 = nil;
																		v262 = 1 + 0;
																	end
																	if ((v262 == 2) or ((2301 - 1636) >= (16093 - 11700))) then
																		while true do
																			if ((v263 == 0) or ((1492 + 488) < (449 + 257))) then
																				local v364 = 82 - (74 + 8);
																				while true do
																					if ((v364 == (1 + (0 - 0))) or ((2797 - (12 + 76 + 26)) < (2973 - 1605))) then
																						v263 = 1 - (0 - 0);
																						break;
																					end
																					if (((4719 - (1624 + (938 - (127 + 585)))) <= 4611) and (v364 == (0 + 0))) then
																						v264 = 1595 - (364 + 1231);
																						v265 = nil;
																						v364 = 816 - (297 + 518);
																					end
																				end
																			end
																			if (((366 + 4110) >= (2273 - 1486)) and (v263 == ((3 - 2) + 0))) then
																				v266 = nil;
																				while true do
																					if ((3264 < ((10782 - (23 + 5)) - (20619 - 13552))) and (v264 == ((1765 - (11 + 1753)) + 0))) then
																						for v420 = v265 + (3 - (1 + 1)), v94[4] do
																							v266 = v266 .. v92[v420];
																						end
																						v92[v94[8 - 6]] = v266;
																						break;
																					end
																					if (((573 + (3391 - 1232)) >= (1404 - (1043 + 18))) and (v264 == (0 + 0))) then
																						local v406 = 0 - 0;
																						while true do
																							if ((v406 == (0 - 0)) or ((2058 + 928) <= (1079 - (82 + 31)))) then
																								local v434 = 0;
																								while true do
																									if ((v434 == 1) or ((641 + 295) >= (4246 - ((163 - 72) + 742)))) then
																										v406 = 3 - 2;
																										break;
																									end
																									if ((v434 == (0 + 0)) or (434 >= (2110 - (927 + 274)))) then
																										v265 = v94[837 - (724 + 110)];
																										v266 = v92[v265];
																										v434 = 1 + 0 + 0;
																									end
																								end
																							end
																							if (((7503 - 4750) == (822 + 1931)) and ((1 + 0) == v406)) then
																								v264 = 4 - 3;
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (((4072 - (1091 + 261)) > ((1009 + 892) - 500)) and (v262 == (78 - (20 + 57)))) then
																		v265 = nil;
																		v266 = nil;
																		v262 = 2;
																	end
																end
															elseif ((4490 >= (892 - (128 + 109))) and (v92[v94[7 - 5]] == v92[v94[1245 - (230 + 1011)]])) then
																v80 = v80 + (1 - 0);
															else
																v80 = v94[3];
															end
														elseif ((v95 == (30 + 29)) or ((2354 + 964) > (5707 - ((301 - 103) + 564)))) then
															if (((2236 - 1618) == ((4194 - 3195) - 381)) and (v92[v94[2 + 0]] <= v92[v94[4]])) then
																v80 = v80 + (983 - (675 + 307));
															else
																v80 = v94[3];
															end
														else
															local v267 = 0 - 0;
															local v268;
															local v269;
															local v270;
															local v271;
															local v272;
															while true do
																if ((v267 == 2) or ((11041 - 8274) == (2625 - (235 + 39)))) then
																	v272 = nil;
																	while true do
																		if ((v268 == (0 + 0 + 0)) or (((2116 - 710) + 1079) < (1088 + 79))) then
																			local v365 = 0;
																			while true do
																				if ((v365 == 0) or (((1864 - (90 + 355)) + 3169) < (3695 - 1152))) then
																					v269 = 280 - (187 + 93);
																					v270 = nil;
																					v365 = 1;
																				end
																				if (((1189 - (607 + (1457 - 876))) == v365) or ((5508 - (381 + 183)) == (5973 - (1343 + 391)))) then
																					v268 = 1 - 0;
																					break;
																				end
																			end
																		end
																		if ((v268 == ((1982 - (1447 + 533)) + 0)) or ((2012 - (335 + 1495)) >= (8454 - 6041))) then
																			while true do
																				if ((v269 == 1) or ((1691 + 2091) >= (9502 - 5272))) then
																					local v407 = 0 - 0;
																					while true do
																						if ((3921 == (9230 - 5309)) and (v407 == (1 + 0))) then
																							v269 = 1643 - (968 + 673);
																							break;
																						end
																						if (((750 + 148) == (720 + 178)) and (v407 == (538 - (64 + 474)))) then
																							v272 = v92[v270] + v271;
																							v92[v270] = v272;
																							v407 = 1 - 0;
																						end
																					end
																				end
																				if ((v269 == ((1395 - (1199 + 194)) + 0)) or (4413 <= (8796 - 5866))) then
																					if ((4409 >= 2947) and (v271 > (0 - 0))) then
																						if ((v272 <= v92[v270 + 1 + 0]) or ((21942 - 16981) < (4599 - 3026))) then
																							local v448 = 1368 - (160 + 1208);
																							local v449;
																							while true do
																								if ((v448 == 0) or ((6539 - 4077) > (4332 - (1153 + 622)))) then
																									v449 = (0 + 0) - 0;
																									while true do
																										if ((2964 > 852) and (v449 == (0 + 0))) then
																											v80 = v94[3 + 0];
																											v92[v270 + 3 + 0] = v272;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif ((v272 >= v92[v270 + 1 + 0]) or ((1662 - 1058) >= 1685)) then
																						local v450 = 1412 - (574 + 838);
																						local v451;
																						local v452;
																						while true do
																							if (((1 + 0) == v450) or (((5141 - (82 + 1308)) - (104 + 533)) == ((5193 - 1947) - (174 + 1574)))) then
																								while true do
																									if ((v451 == (984 - (178 + 806))) or (4722 == (5483 - (3630 - (432 + 1525))))) then
																										v452 = 0 - 0;
																										while true do
																											if ((0 == v452) or (2183 >= (3288 - (1006 + 24)))) then
																												v80 = v94[513 - (40 + 470)];
																												v92[v270 + (921 - ((929 - 672) + 661))] = v272;
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (((1314 - 802) <= ((1775 - (1642 + 112)) + 1550 + 1015)) and (v450 == (0 + 0))) then
																								v451 = 456 - (293 + 163);
																								v452 = nil;
																								v450 = 3 - 2;
																							end
																						end
																					end
																					break;
																				end
																				if (((5059 - (62 + 240)) == 4757) and (v269 == (1526 - ((886 - (282 + 293)) + 1215)))) then
																					local v408 = 0 + 0;
																					while true do
																						if ((v408 == (0 + 0)) or ((4312 - (505 + 378)) < (3856 - (899 + (2080 - (1098 + 472)))))) then
																							local v436 = 0;
																							while true do
																								if ((v436 == (0 - 0)) or ((4415 - (376 + 1441)) > (6455 - 3653))) then
																									v270 = v94[1528 - (439 + 1087)];
																									v271 = v92[v270 + 1 + 1];
																									v436 = 746 - (114 + 631);
																								end
																								if ((v436 == 1) or ((352 + 1036) >= (4670 - (59 + 1091)))) then
																									v408 = 923 - (95 + 827);
																									break;
																								end
																							end
																						end
																						if ((((1854 - (497 + 794)) + 689) == 1252) and (v408 == (1 + 0))) then
																							v269 = 1;
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if ((v268 == 1) or ((8410 - 4182) > (293 + 4439))) then
																			local v366 = 0 + 0;
																			while true do
																				if (((12144 - 9086) > (6063 - 4838)) and ((0 - 0) == v366)) then
																					v271 = nil;
																					v272 = nil;
																					v366 = 3 - 2;
																				end
																				if ((4423 >= (2642 - (1145 + (3177 - 2393)))) and (v366 == (1 + 0 + 0))) then
																					v268 = 1 + 1;
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
																if ((v267 == (1 + 0)) or (1863 == (5083 - (402 + 15)))) then
																	v270 = nil;
																	v271 = nil;
																	v267 = 2 + 0;
																end
																if ((v267 == (0 - 0)) or (1672 > ((6619 - (310 + 121)) - 3709))) then
																	v268 = (700 - (614 + 86)) - 0;
																	v269 = nil;
																	v267 = 2 - 1;
																end
															end
														end
														v80 = v80 + (1 - 0);
														break;
													end
												end
												break;
											end
										end
									end
								end
								A, B = v28(v11(v84));
								if not A[1] then
									local v102 = 0;
									local v103;
									while true do
										if (v102 == 0) then
											v103 = v50[4][v80] or "?";
											error("Script error at [" .. v103 .. "]:" .. A[2]);
											break;
										end
									end
								else
									return v13(A, 2, B);
								end
							end;
						end
					end
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v57, v58, v59)
					if v59 then
						local v74 = (v57 / ((1071 - (495 + 574)) ^ (v58 - (1 + 0 + (0 - 0))))) % ((8 - 6) ^ (((v59 - (50 - (13 + 36))) - (v58 - (1648 - (682 + 965)))) + 1));
						return v74 - (v74 % (1 - 0));
					else
						local v75 = 0 + 0;
						local v76;
						while true do
							if (v75 == (0 + 0)) then
								v76 = (2 + 0) ^ (v58 - (1 + 0));
								return (((v57 % (v76 + v76)) >= v76) and (1 + 0)) or (0 + 0);
							end
						end
					end
				end
				v22 = nil;
				v18 = 2;
			end
			if (4 == v18) then
				function v25()
					local v60 = v24();
					local v61 = v24();
					local v62 = 2 - 1;
					local v63 = (v21(v61, 2 - 1, 1437 - (70 + 1347)) * (((1245 - (320 + 923)) + 0) ^ (849 - (657 + 160)))) + v60;
					local v64 = v21(v61, 21, 642 - (23 + 588));
					local v65 = ((v21(v61, 61 - 29) == (1436 - (1204 + 231))) and -(1 - 0)) or (1 + 0);
					if (v64 == (0 - 0)) then
						if (v63 == (0 + 0)) then
							return v65 * (0 + 0);
						else
							local v85 = 0 - 0;
							while true do
								if ((357 - (210 + (1009 - (309 + 553)))) == v85) then
									v64 = 1;
									v62 = 0;
									break;
								end
							end
						end
					elseif (v64 == (3196 - (2511 - 1362))) then
						return ((v63 == (0 + 0)) and (v65 * ((718 - (313 + 404)) / 0))) or (v65 * NaN);
					end
					return v8(v65, v64 - (270 + 753)) * (v62 + (v63 / ((705 - ((927 - (339 + 63)) + 178)) ^ (1679 - (918 + 709)))));
				end
				v26 = nil;
				function v26(v66)
					local v67;
					if not v66 then
						v66 = v24();
						if (v66 == (0 - 0)) then
							return "";
						end
					end
					v67 = v3(v16, v19, (v19 + v66) - (1 + 0));
					v19 = v19 + v66;
					local v68 = {};
					for v69 = 1144 - (171 + 972), #v67 do
						v68[v69] = v2(v1(v3(v67, v69, v69)));
					end
					return v6(v68);
				end
				v18 = 5;
			end
		end
	end
	v15("LOL!", v9(), ...);
end
